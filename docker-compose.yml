---
# yamllint disable-line-length
# This is applicationâ€™s services configuration for development purposes only.

services:
  db:
    image: mysql:8.0.36-bullseye
    security_opt:
      - seccomp:unconfined
    command: >-
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_polish_ci
      --max_allowed_packet=1024M
    ports:
      - "3306:3306"
    networks:
      - poradnia-app-network
    environment:
      MYSQL_ROOT_PASSWORD: "password"
    volumes:
      - ./.contrib/docker/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
      - mysql-data:/var/lib/mysql

  gulp:
    build:
      context: .
      dockerfile: .contrib/docker/Dockerfile.gulp
    ports:
      - "35729:35729"
    networks:
      - poradnia-app-network
    volumes:
      - .:/app

  web:
    # image: docker-registry.siecobywatelska.pl/poradnia/web
    build:
      context: .
      dockerfile: .contrib/docker/Dockerfile.web
      # args:
      #   PYTHON_VERSION: '${PYTHON_VERSION:-3.7}'

    volumes:
      - .:/code
    environment:
      DATABASE_URL: mysql://root:password@db/poradnia
      DJANGO_EMAIL_BACKEND: "django.core.mail.backends.smtp.EmailBackend"
      DJANGO_EMAIL_HOST: "maildump"
      DJANGO_EMAIL_PORT: "1025"
      DJANGO_EMAIL_USE_TLS: "False"
      DJANGO_EMAIL_HOST_PASSWORD: ""
      DJANGO_EMAIL_HOST_USER: "porady@dev.porady.siecobywatelska.pl"
      DJANGO_EMAIL_SUBJECT_PREFIX: "[poradnia_dev] "
      DJANGO_DEFAULT_FROM_EMAIL: "poradnia_dev <noreply@dev.porady.siecobywatelska.pl>"
      LETTER_RECEIVE_SECRET: "dev_letter_receive_very_secret"
      # porady@porady.siecobywatelska.pl must be included in LETTER_RECEIVE_WHITELISTED_ADDRESS for tests
      LETTER_RECEIVE_WHITELISTED_ADDRESS: "porady@porady.siecobywatelska.pl,porady@dev.porady.siecobywatelska.pl"
      DJANGO_RICH_TEXT_ENABLED: "False"
      APP_MODE: "DEV"
      ROSETTA_AZURE_CLIENT_SECRET: ${ROSETTA_AZURE_CLIENT_SECRET}
      TURNSTILE_SITE_KEY: ${TURNSTILE_SITE_KEY}
      TURNSTILE_SECRET_KEY: ${TURNSTILE_SECRET_KEY}
      MY_INTERNAL_IP: ${MY_INTERNAL_IP}
      NGROK_URL: ${NGROK_URL:-http://localhost}
      CELERY_BROKER_URL: "amqp://poradnia:password@rabbitmq:5672//"
      CELERY_RESULT_BACKEND: "django-db"
    ports:
      - "8000:8000"
    networks:
      - poradnia-app-network

  maildump:
    build:
      context: .
      dockerfile: .contrib/docker/Dockerfile.maildump

    volumes:
      - maildump_data:/data
    ports:
      - "1080:1080"
      - "1025:1025"
    networks:
      - poradnia-app-network

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: poradnia
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    networks:
      - poradnia-app-network
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  celery-worker:
    build:
      context: .
      dockerfile: .contrib/docker/Dockerfile.web
    command: celery -A config worker -l INFO
    volumes:
      - .:/code
    environment:
      DATABASE_URL: mysql://root:password@db/poradnia
      DJANGO_EMAIL_BACKEND: "django.core.mail.backends.smtp.EmailBackend"
      DJANGO_EMAIL_HOST: "maildump"
      DJANGO_EMAIL_PORT: "1025"
      DJANGO_EMAIL_USE_TLS: "False"
      DJANGO_EMAIL_HOST_PASSWORD: ""
      DJANGO_EMAIL_HOST_USER: "porady@dev.porady.siecobywatelska.pl"
      DJANGO_EMAIL_SUBJECT_PREFIX: "[poradnia_dev] "
      DJANGO_DEFAULT_FROM_EMAIL: "poradnia_dev <noreply@dev.porady.siecobywatelska.pl>"
      LETTER_RECEIVE_SECRET: "dev_letter_receive_very_secret"
      LETTER_RECEIVE_WHITELISTED_ADDRESS: "porady@porady.siecobywatelska.pl,porady@dev.porady.siecobywatelska.pl"
      DJANGO_RICH_TEXT_ENABLED: "False"
      APP_MODE: "DEV"
      ROSETTA_AZURE_CLIENT_SECRET: ${ROSETTA_AZURE_CLIENT_SECRET}
      TURNSTILE_SITE_KEY: ${TURNSTILE_SITE_KEY}
      TURNSTILE_SECRET_KEY: ${TURNSTILE_SECRET_KEY}
      MY_INTERNAL_IP: ${MY_INTERNAL_IP}
      NGROK_URL: ${NGROK_URL:-http://localhost}
      CELERY_BROKER_URL: "amqp://poradnia:password@rabbitmq:5672//"
      CELERY_RESULT_BACKEND: "django-db"
    networks:
      - poradnia-app-network
    depends_on:
      - db
      - rabbitmq

  celery-beat:
    build:
      context: .
      dockerfile: .contrib/docker/Dockerfile.web
    command: celery -A config beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/code
    environment:
      DATABASE_URL: mysql://root:password@db/poradnia
      DJANGO_EMAIL_BACKEND: "django.core.mail.backends.smtp.EmailBackend"
      DJANGO_EMAIL_HOST: "maildump"
      DJANGO_EMAIL_PORT: "1025"
      DJANGO_EMAIL_USE_TLS: "False"
      DJANGO_EMAIL_HOST_PASSWORD: ""
      DJANGO_EMAIL_HOST_USER: "porady@dev.porady.siecobywatelska.pl"
      DJANGO_EMAIL_SUBJECT_PREFIX: "[poradnia_dev] "
      DJANGO_DEFAULT_FROM_EMAIL: "poradnia_dev <noreply@dev.porady.siecobywatelska.pl>"
      LETTER_RECEIVE_SECRET: "dev_letter_receive_very_secret"
      LETTER_RECEIVE_WHITELISTED_ADDRESS: "porady@porady.siecobywatelska.pl,porady@dev.porady.siecobywatelska.pl"
      DJANGO_RICH_TEXT_ENABLED: "False"
      APP_MODE: "DEV"
      ROSETTA_AZURE_CLIENT_SECRET: ${ROSETTA_AZURE_CLIENT_SECRET}
      TURNSTILE_SITE_KEY: ${TURNSTILE_SITE_KEY}
      TURNSTILE_SECRET_KEY: ${TURNSTILE_SECRET_KEY}
      MY_INTERNAL_IP: ${MY_INTERNAL_IP}
      NGROK_URL: ${NGROK_URL:-http://localhost}
      CELERY_BROKER_URL: "amqp://poradnia:password@rabbitmq:5672//"
      CELERY_RESULT_BACKEND: "django-db"
    networks:
      - poradnia-app-network
    depends_on:
      - db
      - rabbitmq
  #
  # ### To use email reception uncomment below section and fill in your dev IMAP 
  # ### mailbox secrets in imap-to-webhook-url.env
  #  
  # imap-to-webhook-porady:
  #   image: quay.io/watchdogpolska/imap-to-webhook:latest
  #   environment:
  #     WEBHOOK_URL: "http://web:8000/listy/webhook?secret=dev_letter_receive_very_secret"
  #     SENTRY_DSN: ""
  #     SENTRY_ENVIRONMENT: "porady-dev"
  #     COMPRESS_EML: "True"
  #   env_file:
  #     - imap-to-webhook-url.env
  #   networks:
  #     - poradnia-app-network

  # ### To test webhook receiving, Turnstile or other feature required access from web
  # ###  uncomment below section and set proper django site url in DB
  # ngrok:
  #   build:
  #     context: .
  #     dockerfile: .contrib/docker/Dockerfile.ngrok
  #   command: http web:8000 --url=${NGROK_URL} # web:8000
  #   environment:
  #     - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
  #   ports:
  #     - "4040:4040" # ngrok web interface
  #   networks:
  #     - poradnia-app-network
  #   depends_on:
  #     - web

volumes:
  mysql-data:
  maildump_data:
  rabbitmq-data:

networks:
  poradnia-app-network:
    driver: bridge
